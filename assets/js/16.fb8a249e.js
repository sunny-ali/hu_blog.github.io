(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{497:function(s,n,t){"use strict";t.r(n);var a=t(4),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("什么是Hooks?\nhooks 是react 16.8 新增的特性，它允许你在不写class的情况下操作state 和react的其他特性。\nhooks 只是多了一种写组件的方法，使编写一个组件更简单更方便，同时可以自定义hook把公共的逻辑提取出来，让逻辑在多个组件之间共享。")]),s._v(" "),t("h2",{attrs:{id:"接下来主要通过小demo来学习-hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接下来主要通过小demo来学习-hooks"}},[s._v("#")]),s._v(" 接下来主要通过小demo来学习 Hooks：")]),s._v(" "),t("h2",{attrs:{id:"usestate-状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usestate-状态"}},[s._v("#")]),s._v(" useState：状态")]),s._v(" "),t("p",[s._v("示例如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" //通过useState Hook 声明了一个新的state变量\n  const [count,setCount] = useState(0)\n  //这种js语法叫做数组解构，意味着我们同时创建了count和setCount两个变量\n  // count的值为useState返回的第一个值，setCount是返回的第二个值\n  //相当于以下代码：\n  // var countStateVariable = useState(0); // 返回一个有两个元素的数组\n  // var count = countStateVariable[0]; // 数组里的第一个值\n  // var setcount = countStateVariable[1]; // 数组里的第二个值\n\n  const [obj,setObj] = useState({name:'Ali'})\n  const [arr,setArr] = useState([1,2,3])\n  const [func,setFunc] = useState(()=>{return {name:'ali'};})\n\n  return (\n    <div>\n      <p>{count}</p>\n      {/*当用户点击按钮后，传递一个新的值给setCount，react会重新渲染App组件把最新的值传给它*/}\n      <button onClick={()=>setCount(count+1)}>点我</button>\n\n      <p>{obj.name}--{obj.age}</p>\n      <button onClick={()=>setObj({name:'mini',age:17})}>点我</button>\n\n      <p>{arr}</p>\n      <button onClick={()=>setArr([2,3,4])}>点我</button>\n\n      <p>{func.name}</p>\n      {/*setFunc返回的也必须是同类型*/}\n      <button onClick={()=>setFunc(()=>{return {name:'yli'}})}>点我</button>\n    </div>\n  );\n}\n\nexport default FunComp;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("p",[t("strong",[s._v("例子：点击按钮加一")]),s._v(" "),t("strong",[s._v("第一种写法：Class组件")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React from 'react'\n\nclass  ClassComp extends React.Component{\n  state = {\n    count:0\n  }\n  render() {\n    const {count} = this.state\n    return(\n      <div>\n        <p>{count}</p>\n        <button onClick={()=>this.setState({count:count+1})}>点击加一</button>\n      </div>\n    )\n  }\n}\nexport default ClassComp;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("第二种写法：使用useState")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React,{useState} from 'react'//在函数组件中存储内部state\n\nfunction FunComp() {\n  const [count,setCount] = useState(0)\n\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={()=>setCount(count+1)}>点击加一</button>\n    </div>\n  );\n}\nexport default FunComp;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("h2",{attrs:{id:"useeffect-副作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useeffect-副作用"}},[s._v("#")]),s._v(" useEffect：副作用")]),s._v(" "),t("p",[s._v("以下特点：\n1，看做 componentDidMount，componentDidUpdate 和 componentWillUnmount 这三个函数的组合\n2，副作用（DOM操作，数据请求，组件更新）\n3，采用闭包形式，在组件函数内部执行，因此可以获取props和state\n4，无阻塞更新\n5，useEffect(回调函数，数组(可不写))\n6，多个useEffect")]),s._v(" "),t("p",[t("strong",[s._v("例子：点击按钮自加一，且在count能被2整除时控制台输出当前的count")]),s._v("\n第一种写法：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React from 'react'\n\nclass  ClassComp extends React.Component{\n  state = {\n    count:0\n  }\n  componentDidMount() {//插入真实dom完成初始化渲染\n    if(this.state.count%2===0){\n      console.log(this.state.count)\n    }\n  }\n  componentDidUpdate() {//完成更新\n    if(this.state.count%2===0){\n      console.log(this.state.count)\n    }\n  }\n  render() {\n    const {count} = this.state\n    return(\n      <div>\n        <p>{count}</p>\n        <button onClick={()=>this.setState({count:count+1})}>点击加一</button>\n      </div>\n    )\n  }\n}\nexport default ClassComp;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("p",[t("strong",[s._v("第二种写法：使用useEffect")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React,{useState,useEffect} from 'react'\n\nexport default function FunComp() {\n  const [count, setCount] = useState(0);\n\n  //useEffect有二个参数：函数，数组[]代表的是能够引起副作用执行的依赖\n  useEffect(()=>{\n    if(count%2===0){\n      console.log(count)\n    }\n  },\n    //如果不写第二个参数则默认只有通过useState Hook 声明了一个新的state变量发生变化都会调用此副作用函数\n    // []//只在组件中挂载时执行一次\n    [count]//每次count发生改变都会调用此副作用\n  )\n  return(\n      <div>\n        <p>{count}</p>\n        <button onClick={()=>setCount(count+1)}>点击加一</button>\n      </div>\n  )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h2",{attrs:{id:"usereducer-复杂的副作用处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usereducer-复杂的副作用处理"}},[s._v("#")]),s._v(" useReducer：复杂的副作用处理")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React,{useReducer} from 'react'\n\nexport default function ReducerDemo() {\n  const initialState = {count: 0};\n  const reducer = (state,action) =>{\n    switch (action.type) {\n      case 'increment':\n        return {count: state.count + action.payload};\n      case 'decrement':\n        return {count: state.count - 1};\n      default:\n        throw new Error();\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return(\n    <div>\n      reducer {state.count}                                             \n                                             {/*{自加2}*/}\n      <button onClick={() => dispatch({type: 'increment',payload:2})}>+</button>\n      <button onClick={() => dispatch({type: 'decrement'})}>-</button>\n    </div>\n  )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h2",{attrs:{id:"usecontext-深层状态传递"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usecontext-深层状态传递"}},[s._v("#")]),s._v(" useContext：深层状态传递")]),s._v(" "),t("p",[s._v("例子：父级给子级的子级传值\n"),t("strong",[s._v("第一种：通过最原始方法props逐层传递：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React,{useState} from 'react'\n\nconst Child = (props) => {\n  const style = {\n    backgroundColor:props.bgColor\n  }\n  return <div style={style}>Child</div>\n}\n\nconst Demo = (props) => {\n  const {bgColor} = props\n  return <Child bgColor={bgColor}/>\n}\n\nexport default function UseContextDemo() {\n  const [bgColor,setBgColor] =useState('black')\n  return(\n    <div>\n      <button onClick={()=>setBgColor('pink')}>换背景色</button>\n      <Demo bgColor={bgColor}/>\n    </div>\n  )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[t("strong",[s._v("第二种:使用UseContext：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React,{useState,useContext} from 'react'\n\nconst themContext = React.createContext('black')\n\nconst Child = () => {\n  const bgColor = useContext(themContext)\n  const style = {\n    backgroundColor:bgColor\n  }\n  return <div style={style}>Child</div>\n}\n\nconst Demo = () => {\n  return <Child/>\n}\n\nexport default function UseContextDemo() {\n  const [bgColor,setBgColor] =useState('black')\n  return(\n    <div>\n      <button onClick={()=>setBgColor('pink')}>换背景色</button>\n      <themContext.Provider value={bgColor}>\n        <Demo/>\n      </themContext.Provider>\n    </div>\n  )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h2",{attrs:{id:"自定义hooks"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义hooks"}},[s._v("#")]),s._v(" 自定义Hooks")]),s._v(" "),t("p",[s._v("通过自定义 Hook，可以将组件逻辑提取到可重用的函数中\n自定义hooks-useCount代码：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('import React, {useEffect, useState} from "react";\n\nexport  default function useCount(){//自定义hook\n  const [count,setCount] = useState(0);\n  useEffect(()=>{\n    setInterval(()=>{\n      setCount(count => count + 1)\n    })\n  },[])\n  console.log(count)\n  return count;\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[t("strong",[s._v("组件内使用：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React from \"react\";\nimport useCount from '../src/example/Hooks'\n\nexport default () => {\n const count = useCount()\n return(\n   <p>{count}</p>\n )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h2",{attrs:{id:"useref-引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#useref-引用"}},[s._v("#")]),s._v(" useRef：引用")]),s._v(" "),t("p",[s._v("例子：刷新输入框自动聚焦")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('import React, {useEffect, useRef} from "react";\n\nfunction Input() {\n  const inputRef = useRef()\n\n  useEffect(()=>{\n    inputRef.current.focus()\n  },[])\n\n  return <input ref={inputRef}/>\n}\nexport default function RefDemo() {\n  return(\n    <div>\n      <Input/>\n    </div>\n  )\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("h2",{attrs:{id:"usecallback-usemeno"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usecallback-usemeno"}},[s._v("#")]),s._v(" useCallback&useMeno：")]),s._v(" "),t("p",[s._v("useCallback：一般使用在存储函数，它存储于函数体，当你的依赖不发生更改时，函数体也不会发生更改。\nuseMeno：根据依赖来计算。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import React, {useState, useEffect, useCallback, useMemo} from 'react'\n\nexport default function CallbackMemo() {\n  const [count,setCount] =useState(0)\n  const [otherCount,setOtherCount] =useState(0)\n  useEffect(()=>{\n    setInterval(()=>{\n      setOtherCount((otherCount)=> otherCount + 1);\n    },30)\n    setInterval(()=>{\n      setCount(count => count + 1)\n    },1000)\n  },[])//只执行一次\n  console.log('更新...')\n\n  //依赖不发生更改时，函数体也不会发生更改\n  // useCallback 将函数缓存起来 节流\n  const handleClick = useCallback((ev) =>{\n    console.log(ev.target)\n  },[])\n\n  //const result = count * 100//当setCount和setOtherCount发生改变时都会执行这行代码，\n\n  //当其它状态更改时会触发了组件的更新，\n  // 但是我的这个值只依赖于某一个属性某一个状态时用useMemo\n  const result = useMemo(()=>{\n    console.log('计算中.......')\n    return count * 100\n  },[count])//只依赖于count\n\n  return(\n    <div onClick={handleClick}>\n      {count} {otherCount} {result}\n    </div>\n  )\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br")])]),t("p",[s._v("以上是近期学习Hooks的一些笔记代码整理~")])])}),[],!1,null,null,null);n.default=e.exports}}]);